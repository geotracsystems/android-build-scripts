// GEOTrac Android library build script helpers

enum BuildType {
    DEVELOPMENT("dev"), BETA("beta"), RELEASE("release")

    BuildType(String displayName) { this.displayName = displayName }
    private final String displayName;
    public String toString() { return displayName }
    
    public static fromBranch(String branch) {
        // We use git flow - http://nvie.com/posts/a-successful-git-branching-model/
        // The defaults use release/, hotfix/, etc instead of release- and hotfix- mentioned above
        if(branch.equals("master"))
        {
            //Our only releases are on master
            return BuildType.RELEASE
        }
        else if(branch.startsWith("release/") || branch.startsWith("hotfix/"))
        {
            //Both releases and hotfixes are prereleases - a new version that will show up as a full release later
            return BuildType.BETA
        }
        else
        {
            return BuildType.DEVELOPMENT
        }
    }
}

String getGitBranch()
{
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }

    //Output will look like: master
    return stdout.toString().trim()
}

ext.isReleaseMode = BuildType.fromBranch(getGitBranch()) == BuildType.RELEASE

def determineVersion(String baseVersion)
{
    return isReleaseMode ? baseVersion : baseVersion + "-SNAPSHOT"
}

def getPublishUrl()
{
    return "http://packages.geotracinternational.com/nexus/repository/maven-" + (isReleaseMode ? "releases" : "snapshots")
}

// Export methods by turning them into closures
ext {
    determineVersion = this.&determineVersion
    getPublishUrl = this.&getPublishUrl
}